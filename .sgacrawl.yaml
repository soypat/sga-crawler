scrape:
  classes: true       # scrape classes
  careerPlans: false  # scrape current career plans

# class scraper is affected by year, level, active, period fields
# careerPlan scraper is affected by active, level fields
filter:         # what classes to filter by (required)
  year: 2020
  level: grado  # grado, ingreso, posgrado.  Also works with shorthands grad, ing, pos, ee
  active: on    # bool on/off active/inactive classes. Always use on/true unless you know what you are doing
  period: 2     # 1: primer cuatri, 2:segundo cuatri, all: all cuatris. Also available: special, summer

# Career plans to scrape. If plans is set to 'all' then all plans are scraped
# example array of plans: [M09 - Rev18 (Agosto), M09 - Rev18 (Marzo), K07-Rev.18]
plans: all

request-delay:     # information pertaining to scraper configuration
  minimum_ms: 2000 # delay between non-concurrent scraper requests [miliseconds]
  rand_ms: 500     # random delay.  [miliseconds]

concurrent:
  classBufferMax: 10 # recommended 10 or lower if sgacrawl stops writing classes (required)
  threads: 3         # amount of concurrent requests at a time. recommended 2-4 threads or 0 for non-concurrent use

# json indentation for better reading by humans. Leave null to minify output.
# you might want to set prefix: " " and indent: "\t"
beautify:
  prefix: " "
  indent: "\t"

log:
  silent: false # outputs log if false
  toFile: false # writes log to file if true

# it is not safe to store login information in a file. 
# Do Not Use-- unless you know what this means
# running the program with these set to null will mean writing them at runtime
login:
  user:
  password: